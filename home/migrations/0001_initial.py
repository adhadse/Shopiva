# Generated by Django 3.1.2 on 2021-04-29 13:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('userID', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('userPhone', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('userEmail', models.EmailField(max_length=254, unique=True)),
                ('userImage', models.ImageField(blank=True, null=True, upload_to='')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('is_admin', models.BooleanField(blank=True, default=False)),
                ('is_staff', models.BooleanField(blank=True, default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('productID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('productName', models.CharField(max_length=255)),
                ('productPrice', models.DecimalField(decimal_places=0, max_digits=10)),
                ('productCategory', models.CharField(choices=[('Wearable', 'Wearable'), ('Electronics', 'Electronics'), ('Books', 'Books'), ('Footwear', 'Footwear'), ('Stationary', 'Stationary')], max_length=32)),
                ('productImage', models.ImageField(upload_to='images/')),
                ('productDescription', models.CharField(max_length=512, null=True)),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wishlist',
                'verbose_name_plural': 'Wishlists',
            },
        ),
        migrations.CreateModel(
            name='Attributes',
            fields=[
                ('productID', models.OneToOneField(default=uuid.UUID('77e5388f-03f7-4983-a43a-cadd9a80108b'), on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='home.products')),
                ('bulletin1', models.CharField(blank=True, max_length=64, null=True)),
                ('bulletin2', models.CharField(blank=True, max_length=64, null=True)),
                ('bulletin3', models.CharField(blank=True, max_length=64, null=True)),
                ('bulletin4', models.CharField(blank=True, max_length=64, null=True)),
                ('bulletin5', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'verbose_name_plural': 'Attributes',
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('savedProductPrice', models.IntegerField(blank=True, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.products')),
                ('wishlist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.wishlist')),
            ],
            options={
                'verbose_name': 'Wishlist item',
                'verbose_name_plural': 'Wishlist items',
            },
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_created=True, auto_now=True)),
                ('ratings', models.PositiveIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(5)])),
                ('subject', models.CharField(blank=True, max_length=63, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('productID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='home.products')),
            ],
            options={
                'verbose_name_plural': 'Ratings',
            },
        ),
    ]
